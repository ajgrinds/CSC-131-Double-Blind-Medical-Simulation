#!/usr/bin/env node
const { generateClient } = require('@vendia/codegen-tools')
const chalk = require('chalk')
const path = require('path')
const { version } = require('../package.json')

// Simple wrapper to allow CLI to call codegen-tools generateClient and whatever else we may add eventually
async function runVendiaClient() {
  const args = process.argv.splice(2)
  const command = args[0]
  debug('vendia-client bin command:', command)

  if (command === 'generate') {
    console.log('Invoking @vendia/codegen-tools to generate the client...')
    try {
      // Constructing '../<users-app>/.vendia' from '../<users-app>/node_modules/@vendia/client/bin'
      const dotVendiaDirPath = path.join(__dirname, '../../../../.vendia')
      debug('__dirname:', __dirname)
      debug('process.cwd():', process.cwd())
      // tsup output is VERY different if cwd() is pointing to user's root dir, needs to point to @vendia/client dir
      if (!process.cwd().includes('node_modules/@vendia/client')) {
        process.chdir('node_modules/@vendia/client')
        debug('updated process.cwd()', process.cwd())
      } else {
        debug('Not updating process.cwd()')
      }
      await generateClient({ dotVendiaDirPath, debug, version })
    } catch (e) {
      // Display the error message to the user in red (without entire stack trace)
      console.error(chalk.red(e.message ? e.message : 'Unknown error'))
    }
  } else {
    console.log('Unknown command passed to vendia-client bin:', command)
  }
}

function debug(...args) {
  if (process.env.VENDIA_DEBUG) {
    console.log(...args)
  }
}

runVendiaClient()
