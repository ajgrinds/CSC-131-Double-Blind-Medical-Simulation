const fs = require('fs')
const path = require('path')
const { generateClient } = require('@vendia/codegen-tools')
const { version } = require('../package.json')

async function main() {
  console.log('@vendia/client post-install script: running...')

  // Write debug data to file since console.log doesn't work in the postinstall script
  const debugInfo = {
    __dirname: __dirname,
    cwd: process.cwd(),
    INIT_CWD: process.env.INIT_CWD,
    usedDirectory: null,
    exit_early: false,
    error: false,
    isVendiaMonorepoInstall: false,
  }

  try {
    // Check if we are in a Vendia monorepo installation
    // This runs as a postinstall for THIS vendia-client package (not when its used as a dependency)
    // Should create .vendia-client directory in the vendia-client package root and those files
    // are imported by the entry files in /workspace-entry
    if (process.cwd().endsWith('src/packages/vendia-client')) {
      console.log('Running post-install for Vendia monorepo installation...')
      debugInfo.isVendiaMonorepoInstall = true
      await generateClient({
        debugInfo,
        vendiaMonorepoOverrides: {
          dotVendiaClientPath: path.join(process.cwd(), '.vendia-client'),
          installedClientPath: process.cwd(),
        },
        version,
      })
    } else {
      // Constructing '../<users-app>/.vendia' from '../<users-app>/node_modules/@vendia/client/bin'
      // Should be same result as process.env.INIT_CWD, but using the same method here as in bin/vendia-client.js
      const dotVendiaDirPath = path.join(__dirname, '../../../../.vendia')
      await generateClient({ dotVendiaDirPath, debugInfo, version })
    }
  } catch (e) {
    console.error('@vendia/client post-install script: error!', e?.message)
    debugInfo.error = e?.message || 'unknown error'
    writeDebug(debugInfo)
    process.exit(0)
  }

  console.log('@vendia/client post-install script: complete!')
  writeDebug(debugInfo)
}

main()

function writeDebug(debugInfo) {
  fs.writeFileSync(path.join(__dirname, 'debug.json'), JSON.stringify(debugInfo, null, 2))
}
