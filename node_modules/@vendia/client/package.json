{
  "name": "@vendia/client",
  "version": "0.8.4",
  "author": "Vendia Inc",
  "license": "MIT",
  "contributors": [
    "Brett Andrews <brett@vendia.net> (https://www.halfstack.software/)",
    "David Wells <david@vendia.net> (https://davidwells.io/)",
    "Jake Partusch <jake@vendia.net>",
    "Matt Silverstein <matt@vendia.net> (https://mattsilverstein.com/)"
  ],
  "description": "An isomorphic, type-safe JavaScript/TypeScript client for interacting with your Vendia Universal Apps (Unis). Automatically generates custom code to match your Uni's schema.",
  "keywords": [
    "javascript",
    "typescript",
    "vendia",
    "uni",
    "share",
    "universal",
    "isomorphic",
    "client"
  ],
  "main": "index.js",
  "module": "index.module.js",
  "types": "index.d.ts",
  "bin": "bin/vendia-client.js",
  "files": [
    "src",
    "bin",
    "scripts/postinstall.js",
    "index.js",
    "index.d.ts",
    "index.module.js",
    "tsconfig.json",
    "tsconfig.module.json"
  ],
  "devDependencies": {
    "@types/debug": "^4.1.7",
    "@types/node": "^16.11.26",
    "rimraf": "^3.0.2",
    "ts-node": "^10.7.0",
    "typescript": "^4.6.2"
  },
  "@comment": "Putting full graphql package in dependencies due to issue in readme.md",
  "dependencies": {
    "@lukeed/uuid": "^2.0.0",
    "@vendia/codegen-tools": "0.7.1",
    "chalk": "^4.1.2",
    "debug": "^4.3.4",
    "graphql": "15.8.0",
    "graphql-request": "^4.2.0",
    "graphql-tag": "^2.12.6",
    "graphql-ws": "^5.8.2",
    "isomorphic-ws": "^4.0.1",
    "ws": "^8.5.0"
  },
  "scripts": {
    "_prepackage": "node scripts/clean-test-app-install.js",
    "_postpackage": "node scripts/postpackage.js",
    "_package": "pnpm _prepackage && pnpm pack && pnpm _postpackage",
    "_link-packages": "cd test/vendia-client-test-app && pnpm link ../../../codegen-tools && pnpm link ../../../vendia-client-plugin-file-upload",
    "_npm-install-test-dir": "cd test/vendia-client-test-app && VENDIA_CLIENT_CLI_ENV=dev npm install",
    "_run-tests": "cd test/vendia-client-test-app && pnpm test",
    "test:no-link": "pnpm _package && pnpm _npm-install-test-dir && pnpm _run-tests",
    "test": "pnpm _package && pnpm _link-packages && pnpm _npm-install-test-dir && pnpm _run-tests",
    "postinstall": "node scripts/postinstall.js",
    "lint": "eslint . --ext ts --ignore-path .gitignore"
  },
  "readme": "# @vendia/client - a type-safe client for Vendia Share\n\nThe Client SDK is a type-safe **TypeScript & JavaScript** client for your Uni's API with **auto-generated code customized to match your Uni's schema!**\n\nIf you're new to Vendia and wondering what a \"Uni\" is? This is a great place to start: [What is a Uni?](https://www.vendia.com/docs/share/dev-and-use-unis).\n\nThe official Vendia client is the easiest way to start working with your Uni. Enjoy autocomplete (intellisense) in your favorite IDE, built-in support for both HTTP and websocket GraphQL APIs (see [Realtime Data](#realtime-data-graphql-subscriptions)), multiple authentication methods, file upload/download, and additional conveniences. The client is _[isomorphic](https://en.wikipedia.org/wiki/Isomorphic_JavaScript)_ â€” it can be used in both the **browser** and **server (node.js)**.\n\n**What does \"auto-generated code\" mean?**\n\nCode based on your Uni's schema will be generated automatically during installation (you can read more about how it works [in the appendix below](#code-generation-details)). If your schema included a \"product\" entity, for example, your generated client would include the following methods:\n\n```tsx\n// List all the products\nconst listProductsResponse = await client.entities.product.list();\n\n// Add a new product\nconst addProductResponse = await client.entities.product.add({\n  name: 'super-widget',\n  inventory: 100,\n});\n\n// Get a product by ID\nconst getProductResponse = await client.entities.product.get('abc-123');\n```\n\n# Docs\n\n**Please visit the [Vendia Client SDK docs](https://www.vendia.com/docs/share/vendia-client-sdk) to learn more!**"
}