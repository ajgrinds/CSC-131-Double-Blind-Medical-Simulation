// TODO - planning to remove this altogether, awaiting confirmation from team

// import { srpLogin, getUser as frankenGetUser } from 'franken-srp'
// import { Logger } from './types'
//
// type Tokens = {
//   accessToken: string
//   idToken: string
//   refreshToken: string
// }
//
// // Naive Vendia User Login - does not support MFA, refresh tokens, etc.
// // NOTE: Until Auth v2 is out, this only works for Unis using Vendia User Auth as sole auth mechanism
// export const getVendiaUserAuth = ({ _logger }: { _logger: Logger }) => {
//   let tokens: Tokens | null = null
//   let isAuthenticated = false
//
//   const login = async ({ username, password }: { username: string; password: string }): Promise<Tokens> => {
//     const login = srpLogin({
//       username,
//       password,
//       region: 'us-east-1',
//       userPoolId: 'us-east-1_N7amGsOgA',
//       clientId: '7rcfp2gvcrb86fkig5k2mml23t',
//       // srpLogin options type requires passing in these extra params for device functionality
//       device: undefined,
//       autoConfirmDevice: false,
//       autoRememberDevice: null,
//     })
//
//     const result = await login.next()
//     _logger('loginWithVendiaUser - result:', result)
//     if (result.value.code === 'TOKENS' && result?.value?.response?.tokens?.idToken) {
//       const token = result.value.response.tokens.idToken
//       _logger('loginWithVendiaUser - success!')
//       isAuthenticated = true
//       tokens = {
//         accessToken: token,
//         idToken: token,
//         refreshToken: '',
//       }
//       return tokens
//     } else {
//       throw new Error(`loginWithVendiaUser - unexpected result: ${result}`)
//     }
//   }
//
//   const logout = () => {
//     isAuthenticated = false
//     tokens = null
//   }
//
//   const getUser = async () => {
//     if (!isAuthenticated || !tokens) {
//       throw new Error('Must be logged in to perform getUser')
//     }
//     return frankenGetUser({
//       region: 'us-east-1',
//       accessToken: tokens.accessToken,
//     })
//   }
//
//   return {
//     login,
//     logout,
//     getUser,
//     isAuthenticated: () => isAuthenticated,
//   }
// }
