export declare const operations = "\n  query _blocks__get($id: ID!) {\n    getVendia_Block(id: $id) {\n      _id\n      blockSchemaVersion\n      blockId\n      redactedBlockHash\n      previousBlockId\n      previousRedactedBlockHash\n      blockHash\n      previousBlockHash\n      status\n      commitTime\n      _owner\n      transactions {\n        _id\n        hash\n        redactedHash\n        signature\n        version\n        submissionTime\n        mutations\n        _owner\n      }\n    }\n  }\n\n  query _blocks__list($order: [Vendia_Block_OrderInput_!], $filter: Vendia_Block_FilterInput_, $limit: Int, $nextToken: String) {\n    listVendia_BlockItems(order: $order, filter: $filter, limit: $limit, nextToken: $nextToken) {\n      nextToken\n      Vendia_BlockItems {\n        _id\n        blockSchemaVersion\n        blockId\n        redactedBlockHash\n        previousBlockId\n        previousRedactedBlockHash\n        blockHash\n        previousBlockHash\n        status\n        commitTime\n        _owner\n        transactions {\n          _id\n          hash\n          redactedHash\n          signature\n          version\n          submissionTime\n          mutations\n          _owner\n        }\n      }\n    }\n  }\n\n  subscription _blocks__onAdd {\n    onAddVendia_Block {\n      ...Vendia_Block_Result_Fragment\n    }\n  }\n\n  fragment Vendia_Block_Result_Fragment on Vendia_Block_Result_ {\n    error\n    result {\n      _id\n      blockSchemaVersion\n      blockId\n      redactedBlockHash\n      previousBlockId\n      previousRedactedBlockHash\n      blockHash\n      previousBlockHash\n      status\n      commitTime\n      _owner\n      transactions {\n        _id\n        hash\n        redactedHash\n        signature\n        version\n        submissionTime\n        mutations\n        _owner\n      }\n    }\n  }\n\n  query _contracts__get($id: ID!, $version: Int) {\n    getVendia_Contract(id: $id, version: $version) {\n      ... on Vendia_Contract {\n        description\n        revisionId\n        _acl {\n          path\n          operations\n          principal {\n            nodes\n          }\n        }\n        _id\n        _owner\n        inputQuery\n        name\n        outputMutation\n        resource {\n          uri\n          csp\n          metadata {\n            name\n            value\n          }\n        }\n      }\n      ... on Vendia_Contract_Partial_ {\n        __alias__name: name\n        description\n        _acl {\n          path\n          operations\n          principal {\n            nodes\n          }\n        }\n        _id\n        _owner\n        inputQuery\n        __alias__outputMutation: outputMutation\n        __alias__resource: resource {\n          uri\n          csp\n          metadata {\n            name\n            value\n          }\n        }\n        revisionId\n      }\n    }\n  }\n\n  query _contracts__list($limit: Int, $nextToken: String, $order: [Vendia_Contract_OrderInput_!], $filter: Vendia_Contract_FilterInput_) {\n    listVendia_ContractItems(order: $order, filter: $filter, limit: $limit, nextToken: $nextToken) {\n      Vendia_ContractItems {\n        ... on Vendia_Contract {\n          description\n          revisionId\n          _acl {\n            path\n            operations\n            principal {\n              nodes\n            }\n          }\n          _id\n          _owner\n          inputQuery\n          name\n          outputMutation\n          resource {\n            uri\n            csp\n            metadata {\n              name\n              value\n            }\n          }\n        }\n        ... on Vendia_Contract_Partial_ {\n          __alias__name: name\n          description\n          _acl {\n            path\n            operations\n            principal {\n              nodes\n            }\n          }\n          _id\n          _owner\n          inputQuery\n          __alias__outputMutation: outputMutation\n          __alias__resource: resource {\n            uri\n            csp\n            metadata {\n              name\n              value\n            }\n          }\n          revisionId\n        }\n      }\n      nextToken\n    }\n  }\n\n  query _contracts__listVersions($id: ID!, $limit: Int, $nextToken: String) {\n    listVendia_ContractVersions(id: $id, limit: $limit, nextToken: $nextToken) {\n      nextToken\n      versions {\n        ordinal\n        block\n        transactions {\n          _id\n          _owner\n          submissionTime\n        }\n      }\n    }\n  }\n\n  mutation _contracts__add(\n    $aclInput: Vendia_Acls_Input_\n    $input: Vendia_Contract_Input_!\n    $syncMode: Vendia_SyncMode = NODE_COMMITTED\n  ) {\n    addVendia_Contract(aclInput: $aclInput, input: $input, syncMode: $syncMode) {\n      transaction {\n        _id\n        transactionId\n        version\n        submissionTime\n        _owner\n      }\n      result {\n        ... on Vendia_Contract {\n          description\n          revisionId\n          _acl {\n            operations\n            path\n            principal {\n              nodes\n            }\n          }\n          _id\n          _owner\n          inputQuery\n          name\n          outputMutation\n          resource {\n            uri\n            csp\n            metadata {\n              name\n              value\n            }\n          }\n        }\n        ... on Vendia_Contract_Partial_ {\n          __alias__name: name\n          description\n          _acl {\n            path\n            operations\n            principal {\n              nodes\n            }\n          }\n          _id\n          _owner\n          inputQuery\n          __alias__outputMutation: outputMutation\n          __alias__resource: resource {\n            uri\n            csp\n            metadata {\n              name\n              value\n            }\n          }\n          revisionId\n        }\n      }\n    }\n  }\n\n  mutation _contracts__update(\n    $id: ID!\n    $aclInput: Vendia_Acls_Input_\n    $condition: Vendia_Contract_ConditionInput_\n    $input: Vendia_Contract_UpdateInput_ = {}\n    $syncMode: Vendia_SyncMode = NODE_COMMITTED\n  ) {\n    updateVendia_Contract(input: $input, aclInput: $aclInput, condition: $condition, id: $id, syncMode: $syncMode) {\n      transaction {\n        _id\n        transactionId\n        version\n        submissionTime\n        _owner\n      }\n      result {\n        ... on Vendia_Contract {\n          description\n          revisionId\n          _acl {\n            operations\n            path\n            principal {\n              nodes\n            }\n          }\n          _id\n          _owner\n          inputQuery\n          name\n          outputMutation\n          resource {\n            uri\n            csp\n            metadata {\n              name\n              value\n            }\n          }\n        }\n        ... on Vendia_Contract_Partial_ {\n          __alias__name: name\n          description\n          _acl {\n            path\n            operations\n            principal {\n              nodes\n            }\n          }\n          _id\n          _owner\n          inputQuery\n          __alias__outputMutation: outputMutation\n          __alias__resource: resource {\n            uri\n            csp\n            metadata {\n              name\n              value\n            }\n          }\n          revisionId\n        }\n      }\n    }\n  }\n\n  mutation _contracts__invoke($input: Vendia_Contract_InvokeInput_, $revisionId: String, $id: ID!) {\n    invokeVendia_Contract(id: $id, input: $input, revisionId: $revisionId, syncMode: ASYNC) {\n      transaction {\n        _id\n        transactionId\n        version\n        submissionTime\n        _owner\n      }\n    }\n  }\n\n  mutation _contracts__remove(\n    $id: ID!\n    $condition: Vendia_Contract_ConditionInput_\n    $syncMode: Vendia_SyncMode = NODE_COMMITTED\n  ) {\n    removeVendia_Contract(id: $id, condition: $condition, syncMode: $syncMode) {\n      transaction {\n        _id\n        transactionId\n        version\n        submissionTime\n        _owner\n      }\n    }\n  }\n\n  query _deployments__get($id: ID!) {\n    getVendia_DeploymentInfo(id: $id) {\n      _id\n      deploymentTime\n      consensusDefinitionHash\n      versionTag\n      _owner\n    }\n  }\n\n  query _deployments__list($order: [Vendia_DeploymentInfo_OrderInput_!], $filter: Vendia_DeploymentInfo_FilterInput_, $nextToken: String, $limit: Int) {\n    listVendia_DeploymentInfoItems(order: $order, filter: $filter, limit: $limit, nextToken: $nextToken) {\n      Vendia_DeploymentInfoItems {\n        _id\n        deploymentTime\n        consensusDefinitionHash\n        versionTag\n        _owner\n      }\n      nextToken\n    }\n  }\n\n  query _files__get($id: ID!, $version: Int) {\n    getVendia_File(id: $id, version: $version) {\n      _id\n      sourceBucket\n      sourceKey\n      sourceRegion\n      sourceVersion\n      destinationKey\n      copyStrategy\n      read\n      write\n      etag\n      createdTime\n      updatedTime\n      temporaryUrl\n      fileVersion\n      _owner\n    }\n  }\n\n  query _files__list($order: [Vendia_File_OrderInput_!], $filter: Vendia_File_FilterInput_, $limit: Int, $nextToken: String) {\n    listVendia_FileItems(order: $order, filter: $filter, limit: $limit, nextToken: $nextToken) {\n      nextToken\n      Vendia_FileItems {\n        _id\n        sourceBucket\n        sourceKey\n        sourceRegion\n        sourceVersion\n        destinationKey\n        copyStrategy\n        read\n        write\n        etag\n        createdTime\n        updatedTime\n        temporaryUrl\n        fileVersion\n        _owner\n      }\n    }\n  }\n\n  query _files__listVersions($id: ID!, $limit: Int, $nextToken: String) {\n    listVendia_FileVersions(id: $id, limit: $limit, nextToken: $nextToken) {\n      nextToken\n      versions {\n        ordinal\n        block\n        transactions {\n          _id\n          _owner\n          submissionTime\n        }\n      }\n    }\n  }\n\n  mutation _files__add($input: Vendia_File_Input_!, $syncMode: Vendia_SyncMode = NODE_COMMITTED) {\n    addVendia_File(input: $input, syncMode: $syncMode) {\n      transaction {\n        _id\n        transactionId\n        version\n        submissionTime\n        _owner\n      }\n      result {\n        _id\n        sourceBucket\n        sourceKey\n        sourceRegion\n        sourceVersion\n        destinationKey\n        copyStrategy\n        read\n        write\n        etag\n        createdTime\n        updatedTime\n        temporaryUrl\n        fileVersion\n        _owner\n      }\n    }\n  }\n\n  mutation _files__update(\n    $id: ID!\n    $condition: Vendia_File_ConditionInput_\n    $input: Vendia_File_UpdateInput_!\n    $syncMode: Vendia_SyncMode = NODE_COMMITTED\n  ) {\n    updateVendia_File(id: $id, input: $input, condition: $condition, syncMode: $syncMode) {\n      transaction {\n        _id\n        transactionId\n        version\n        submissionTime\n        _owner\n      }\n      result {\n        _id\n        sourceBucket\n        sourceKey\n        sourceRegion\n        sourceVersion\n        destinationKey\n        copyStrategy\n        read\n        write\n        etag\n        createdTime\n        updatedTime\n        temporaryUrl\n        fileVersion\n        _owner\n      }\n    }\n  }\n\n  mutation _files__remove(\n    $condition: Vendia_File_ConditionInput_\n    $id: ID!\n    $syncMode: Vendia_SyncMode = NODE_COMMITTED\n  ) {\n    removeVendia_File(id: $id, condition: $condition, syncMode: $syncMode) {\n      transaction {\n        _id\n        transactionId\n        version\n        submissionTime\n        _owner\n      }\n    }\n  }\n\n  subscription _files__onAdd {\n    onAddVendia_File {\n      ...Vendia_File_Result_Fragment\n    }\n  }\n\n  subscription _files__onRemove {\n    onRemoveVendia_File {\n      ...Vendia_File_Result_Fragment\n    }\n  }\n\n  subscription _files__onUpdate {\n    onUpdateVendia_File {\n      ...Vendia_File_Result_Fragment\n    }\n  }\n\n  fragment Vendia_File_Result_Fragment on Vendia_File_Result_ {\n    error\n    result {\n      _id\n      sourceBucket\n      sourceKey\n      sourceRegion\n      sourceVersion\n      destinationKey\n      copyStrategy\n      read\n      write\n      etag\n      createdTime\n      updatedTime\n      temporaryUrl\n      fileVersion\n      _owner\n    }\n  }\n\n  query _folders__get($id: ID!, $version: Int) {\n    getVendia_Folder(id: $id, version: $version) {\n      _id\n      name\n      parent\n      read\n      write\n      copyStrategy\n      createdTime\n      updatedTime\n      _owner\n    }\n  }\n\n  query _folders__list($order: [Vendia_Folder_OrderInput_!], $filter: Vendia_Folder_FilterInput_, $limit: Int, $nextToken: String) {\n    listVendia_FolderItems(order: $order, filter: $filter, limit: $limit, nextToken: $nextToken) {\n      Vendia_FolderItems {\n        _id\n        name\n        parent\n        read\n        write\n        copyStrategy\n        createdTime\n        updatedTime\n        _owner\n      }\n      nextToken\n    }\n  }\n\n  query _folders__listVersions($id: ID!, $limit: Int, $nextToken: String) {\n    listVendia_FolderVersions(id: $id, limit: $limit, nextToken: $nextToken) {\n      nextToken\n      versions {\n        ordinal\n        block\n        transactions {\n          _id\n          _owner\n          submissionTime\n        }\n      }\n    }\n  }\n\n  mutation _folders__add($input: Vendia_Folder_Input_!, $syncMode: Vendia_SyncMode = NODE_COMMITTED) {\n    addVendia_Folder(input: $input, syncMode: $syncMode) {\n      transaction {\n        _id\n        transactionId\n        version\n        submissionTime\n        _owner\n      }\n      result {\n        _id\n        name\n        parent\n        read\n        write\n        copyStrategy\n        createdTime\n        updatedTime\n        _owner\n      }\n    }\n  }\n\n  mutation _folders__remove(\n    $id: ID!\n    $condition: Vendia_Folder_ConditionInput_\n    $syncMode: Vendia_SyncMode = NODE_COMMITTED\n  ) {\n    removeVendia_Folder(id: $id, condition: $condition, syncMode: $syncMode) {\n      transaction {\n        _id\n        transactionId\n        version\n        submissionTime\n        _owner\n      }\n    }\n  }\n\n  subscription _folders__onAdd {\n    onAddVendia_Folder {\n      ...Vendia_Folder_Result_Fragment\n    }\n  }\n\n  subscription _folders__onRemove {\n    onRemoveVendia_Folder {\n      ...Vendia_Folder_Result_Fragment\n    }\n  }\n\n  subscription _folders__onUpdate {\n    onUpdateVendia_Folder {\n      ...Vendia_Folder_Result_Fragment\n    }\n  }\n\n  fragment Vendia_Folder_Result_Fragment on Vendia_Folder_Result_ {\n    error\n    result {\n      _id\n      name\n      parent\n      read\n      write\n      copyStrategy\n      createdTime\n      updatedTime\n      _owner\n    }\n  }\n\n  query _settings__get($version: Int) {\n    getVendia_Settings(version: $version) {\n      blockReportWebhooks\n      blockReportEmails\n      deadLetterWebhooks\n      deadLetterEmails\n      azure {\n        defaultSubscriptionId\n        defaultTenantId\n      }\n      resourceMapKeys\n      resourceMapValues\n      apiSettings {\n        apiKeys {\n          value\n          usagePlan {\n            quotaSettings {\n              limit\n              offset\n              period\n            }\n            throttleSettings {\n              burstLimit\n              rateLimit\n            }\n          }\n        }\n        auth {\n          authorizerType\n          authorizerArn\n          allowedAccounts\n        }\n      }\n      _owner\n      aws {\n        blockReportSQSQueues\n        blockReportLambdas\n        blockReportFirehoses\n        deadLetterSQSQueues\n        deadLetterLambdas\n        s3ReadAccounts\n        dataDogMonitoring {\n          ddExternalId\n          ddApiKey\n          ddLogEndpoint\n          ddSendLogs\n        }\n      }\n    }\n  }\n\n  query _settings__listVersions($limit: Int, $nextToken: String) {\n    listVendia_SettingsVersions(limit: $limit, nextToken: $nextToken) {\n      versions {\n        ordinal\n        block\n        transactions {\n          _id\n          _owner\n          submissionTime\n        }\n      }\n      nextToken\n    }\n  }\n\n  mutation _settings__update(\n    $condition: Vendia_Settings_ConditionInput_\n    $input: Vendia_Settings_UpdateInput_!\n    $syncMode: Vendia_SyncMode = NODE_COMMITTED\n  ) {\n    updateVendia_Settings(condition: $condition, input: $input, syncMode: $syncMode) {\n      transaction {\n        _id\n        transactionId\n        version\n        submissionTime\n        _owner\n      }\n      result {\n        blockReportWebhooks\n        blockReportEmails\n        deadLetterWebhooks\n        deadLetterEmails\n        azure {\n          blockReportFunctions {\n            resourceGroupName\n            functionAppName\n            functionName\n          }\n          blockReportQueues {\n            resourceGroupName\n            storageAccountName\n            queueName\n          }\n          deadLetterFunctions {\n            resourceGroupName\n            functionAppName\n            functionName\n          }\n          deadLetterQueues {\n            resourceGroupName\n            storageAccountName\n            queueName\n          }\n          defaultSubscriptionId\n          defaultTenantId\n        }\n        resourceMapKeys\n        resourceMapValues\n        apiSettings {\n          apiKeys {\n            value\n            usagePlan {\n              quotaSettings {\n                limit\n                offset\n                period\n              }\n              throttleSettings {\n                burstLimit\n                rateLimit\n              }\n            }\n          }\n        }\n        _owner\n        aws {\n          blockReportSQSQueues\n          blockReportLambdas\n          blockReportFirehoses\n          deadLetterSQSQueues\n          deadLetterLambdas\n          s3ReadAccounts\n          dataDogMonitoring {\n            ddExternalId\n            ddApiKey\n            ddLogEndpoint\n            ddSendLogs\n          }\n        }\n      }\n    }\n  }\n\n  query _uniInfo__get {\n    getVendia_UniInfo {\n      name\n      sku\n      schema\n      schemaNamespace\n      status\n      createdTime\n      updatedTime\n      localNodeName\n      _owner\n      nodes {\n        name\n        userId\n        userEmail\n        description\n        status\n        csp\n        region\n        bucketName\n        temporaryCredentials {\n          uploadFile {\n            accessKeyId\n            expiration\n            secretAccessKey\n            sessionToken\n          }\n        }\n        tier {\n          share\n        }\n        vendiaAccount {\n          csp\n          accountId\n          userId\n          org\n        }\n      }\n    }\n  }\n";
export declare const introspectionQuery = "\nquery _vendia__introspection {\n  __schema {\n    queryType { name }\n    mutationType { name }\n    subscriptionType { name }\n    types {\n      ...FullType\n    }\n    directives {\n      name\n      description\n      locations\n      args {\n        ...InputValue\n      }\n    }\n  }\n}\n\nfragment FullType on __Type {\n  kind\n  name\n  description\n  fields(includeDeprecated: true) {\n    name\n    description\n    args {\n      ...InputValue\n    }\n    type {\n      ...TypeRef\n    }\n    isDeprecated\n    deprecationReason\n  }\n  inputFields {\n    ...InputValue\n  }\n  interfaces {\n    ...TypeRef\n  }\n  enumValues(includeDeprecated: true) {\n    name\n    description\n    isDeprecated\n    deprecationReason\n  }\n  possibleTypes {\n    ...TypeRef\n  }\n}\n\nfragment InputValue on __InputValue {\n  name\n  description\n  type { ...TypeRef }\n  defaultValue\n}\n\nfragment TypeRef on __Type {\n  kind\n  name\n  ofType {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n";
